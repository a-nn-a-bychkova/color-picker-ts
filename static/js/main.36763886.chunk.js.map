{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","contexts/context.js","contexts/Provider.js","components/ColorPicker/ColorPicker.js","components/ModalChooseColor/ModalChooseColor.js","components/ModalPalette/ModalPalette.js","components/App.js","reportWebVitals.js","index.js","components/ModalChooseColor/ModalChooseColor.module.css","components/ModalPalette/ModalPalette.module.css"],"names":["module","exports","createContext","Provider","children","useState","h","s","l","a","redColor","setRedColor","greenColor","setGreenColor","blueColor","setBlueColor","chosenColor","setChosenColor","color","setColor","selectedColors","setSelectedColors","temporaryColor","setTemporaryColor","useEffect","providerValue","useMemo","value","ColorPicker","toggleModalChoose","toggleModalPalette","useContext","Context","backgroundColor","width","height","marginTop","marginLeft","marginRight","className","style","Container","Menu","Number","Square","onClick","event","preventDefault","Arrow","Icon","ModalChooseColor","addSelectedColor","hexRedColor","setHexRedColor","hexGreenColor","setHexGreenColor","hexBlueColor","setHexBlueColor","updatedColorToString","newColor","mixChosenColors","r","slice","g","b","handleMouseUp","e","target","classList","contains","window","addEventListener","removeEventListener","SliderContainer","handleChangeColor","updatedColor","convert","hsl","hex","ButtonContainer","type","localStorage","getItem","CancelButton","console","log","setItem","OkButton","ModalPalette","handleClickChooseColor","innerText","Text","List","map","Item","ItemText","border","uuidv4","App","showModalChoose","setShowModalChoose","showModalPalette","setShowModalPalette","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36763886.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ColorPicker_Container__K1kK3\",\"Menu\":\"ColorPicker_Menu__3GfxU\",\"Number\":\"ColorPicker_Number__2TOem\",\"Square\":\"ColorPicker_Square__3YcvT\",\"Arrow\":\"ColorPicker_Arrow__2tS5M\",\"Icon\":\"ColorPicker_Icon__3Ax4b\"};","import { createContext } from 'react';\r\n\r\nexport default createContext();\r\n","import { useMemo, useState, useEffect } from 'react';\r\nimport Context from './context';\r\nexport default function Provider({ children }) {\r\n  const [redColor, setRedColor] = useState({ h: 0, s: 100, l: 50, a: 1 });\r\n  const [greenColor, setGreenColor] = useState({ h: 120, s: 100, l: 50, a: 1 });\r\n  const [blueColor, setBlueColor] = useState({ h: 240, s: 100, l: 50, a: 1 });\r\n  const [chosenColor, setChosenColor] = useState('');\r\n  const [color, setColor] = useState('#ff0000');\r\n  const [selectedColors, setSelectedColors] = useState([]);\r\n  const [temporaryColor, setTemporaryColor] = useState('ff0000');\r\n\r\n  useEffect(() => {}, [color]);\r\n\r\n  const providerValue = useMemo(() => {\r\n    return {\r\n      redColor,\r\n      setRedColor,\r\n      greenColor,\r\n      setGreenColor,\r\n      blueColor,\r\n      setBlueColor,\r\n      chosenColor,\r\n      setChosenColor,\r\n      color,\r\n      setColor,\r\n      selectedColors,\r\n      setSelectedColors,\r\n      temporaryColor,\r\n      setTemporaryColor,\r\n    };\r\n  }, [\r\n    redColor,\r\n    setRedColor,\r\n    greenColor,\r\n    setGreenColor,\r\n    blueColor,\r\n    setBlueColor,\r\n    chosenColor,\r\n    setChosenColor,\r\n    color,\r\n    setColor,\r\n    selectedColors,\r\n    setSelectedColors,\r\n  ]);\r\n  return <Context.Provider value={providerValue}>{children}</Context.Provider>;\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport Context from '../../contexts/context';\r\nimport style from './ColorPicker.module.css';\r\nimport { ChevronDown } from 'react-feather';\r\n\r\nfunction ColorPicker({ toggleModalChoose, toggleModalPalette }) {\r\n  const { color, setColor } = useContext(Context);\r\n  const { chosenColor, setChosenColor } = useContext(Context);\r\n  useEffect(() => {\r\n    if (chosenColor) {\r\n      setColor(chosenColor);\r\n    }\r\n  }, [chosenColor, setChosenColor]);\r\n\r\n  const s = {\r\n    backgroundColor: color,\r\n    width: '15px',\r\n    height: '15px',\r\n    marginTop: '7px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  };\r\n  const handleSquareClick = event => {\r\n    event.preventDefault();\r\n    toggleModalChoose();\r\n  };\r\n\r\n  const handleArrowClick = event => {\r\n    event.preventDefault();\r\n    toggleModalPalette();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Menu}>\r\n        <div className={style.Number}>{color}</div>\r\n        <div className={style.Square} onClick={handleSquareClick}>\r\n          <div style={s}></div>\r\n        </div>\r\n        <div className={style.Arrow} onClick={handleArrowClick}>\r\n          <ChevronDown className={style.Icon} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Context from '../../contexts/context';\r\nimport style from './ModalChooseColor.module.css';\r\nimport { LightnessSlider } from 'react-slider-color-picker';\r\nimport convert from 'color-convert';\r\n\r\nfunction ModalChooseColor({ toggleModalChoose, addSelectedColor }) {\r\n  const [hexRedColor, setHexRedColor] = useState('ff0000');\r\n  const [hexGreenColor, setHexGreenColor] = useState('00ff00');\r\n  const [hexBlueColor, setHexBlueColor] = useState('0000ff');\r\n\r\n  const { redColor, setRedColor } = useContext(Context);\r\n  const { greenColor, setGreenColor } = useContext(Context);\r\n  const { blueColor, setBlueColor } = useContext(Context);\r\n  const { chosenColor, setChosenColor } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    function handleMouseUp(e) {\r\n      if (\r\n        !e.target.classList.contains('ModalChooseColor_Container__213HF') &&\r\n        !e.target.classList.contains('ModalChooseColor_OkButton__2q4sh') &&\r\n        !e.target.classList.contains('ColorPicker_Square__3YcvT') &&\r\n        !e.target.classList.contains('ModalChooseColor_CancelButton__ZQB7p')\r\n      ) {\r\n        toggleModalChoose();\r\n      }\r\n    }\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  function updatedColorToString(newColor) {\r\n    return [newColor.h, newColor.s, newColor.l];\r\n  }\r\n\r\n  function mixChosenColors() {\r\n    let r = hexRedColor.slice(0, 2);\r\n    let g = hexGreenColor.slice(2, 4);\r\n    let b = hexBlueColor.slice(4);\r\n    return setChosenColor(`#${r}${g}${b}`);\r\n  }\r\n\r\n  const handleChangeRedColor = newColor => {\r\n    setRedColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexRedColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n  };\r\n\r\n  const handleChangeGreenColor = newColor => {\r\n    setGreenColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexGreenColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n  };\r\n  const handleChangeBlueColor = newColor => {\r\n    setBlueColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexBlueColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n  };\r\n\r\n  const handleCancelBtnClick = event => {\r\n    event.preventDefault();\r\n\r\n    setChosenColor(localStorage.getItem('currentColor'));\r\n    toggleModalChoose();\r\n  };\r\n\r\n  const handleOKClick = event => {\r\n    event.preventDefault();\r\n    console.log('chosenColor', chosenColor);\r\n    addSelectedColor(chosenColor);\r\n    localStorage.setItem('currentColor', chosenColor);\r\n    toggleModalChoose();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.SliderContainer}>\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeRedColor}\r\n          color={redColor}\r\n        />\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeGreenColor}\r\n          color={greenColor}\r\n        />\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeBlueColor}\r\n          color={blueColor}\r\n        />\r\n      </div>\r\n      <div className={style.ButtonContainer}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCancelBtnClick}\r\n          className={style.CancelButton}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleOKClick}\r\n          className={style.OkButton}\r\n        >\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChooseColor;\r\n","import { useEffect, useContext } from 'react';\r\nimport Context from '../../contexts/context';\r\nimport style from './ModalPalette.module.css';\r\nimport { X } from 'react-feather';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ModalPalette({ toggleModalPalette, selectedColors }) {\r\n  const { chosenColor, setChosenColor } = useContext(Context);\r\n  useEffect(() => {\r\n    function handleMouseUp(e) {\r\n      if (e.target.classList.contains('ColorPicker_Container__K1kK3')) {\r\n        toggleModalPalette();\r\n      } else if (e.target.classList.contains('App')) {\r\n        toggleModalPalette();\r\n      }\r\n      // console.log(e.target.classList);\r\n    }\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, []);\r\n  // const deleteColor = key => {\r\n  //   console.log(key);\r\n  // };\r\n  const handleClickChooseColor = event => {\r\n    console.log('this is inner text', event.target.innerText);\r\n    setChosenColor(event.target.innerText);\r\n    localStorage.setItem('currenColor', event.target.innerText);\r\n    toggleModalPalette();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <h2 className={style.Text}>Your color collection</h2>\r\n      {selectedColors && (\r\n        <ul className={style.List}>\r\n          {selectedColors.map(color => (\r\n            <li\r\n              key={uuidv4()}\r\n              className={style.Item}\r\n              onClick={handleClickChooseColor}\r\n            >\r\n              <h2 className={style.ItemText}>{color}</h2>\r\n              <div\r\n                style={{\r\n                  width: '15px',\r\n                  height: '15px',\r\n                  backgroundColor: color,\r\n                  border: '1px solid #b6b6b4',\r\n                }}\r\n              ></div>\r\n              {/* <X onClick={deleteColor(key)} /> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPalette;\r\n","import { useState, useEffect, useContext } from 'react';\nimport './App.css';\nimport ColorPicker from './ColorPicker';\nimport ModalChooseColor from './ModalChooseColor';\nimport ModalPalette from './ModalPalette';\nimport Context from '../contexts/context';\n\nfunction App() {\n  const [selectedColors, setSelectedColors] = useState([]);\n  const [showModalChoose, setShowModalChoose] = useState(false);\n  const [showModalPalette, setShowModalPalette] = useState(false);\n\n  useEffect(() => {\n    let initialColor = '#ff0000';\n    localStorage.setItem('currentColor', initialColor);\n  }, []);\n\n  function toggleModalChoose() {\n    if (showModalPalette) {\n      setShowModalPalette(false);\n    }\n    setShowModalChoose(!showModalChoose);\n  }\n\n  function toggleModalPalette() {\n    if (showModalChoose) {\n      setShowModalChoose(false);\n    }\n    setShowModalPalette(!showModalPalette);\n  }\n\n  function addSelectedColor(chosenColor) {\n    console.log('chosenColor in add function', chosenColor);\n    if (chosenColor) {\n      setSelectedColors([...selectedColors, chosenColor]);\n      console.log('selectedColorsArray', selectedColors);\n    } else {\n      return;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <ColorPicker\n        toggleModalChoose={toggleModalChoose}\n        toggleModalPalette={toggleModalPalette}\n      />\n      {showModalChoose && (\n        <ModalChooseColor\n          toggleModalChoose={toggleModalChoose}\n          addSelectedColor={addSelectedColor}\n        />\n      )}\n      {showModalPalette && (\n        <ModalPalette\n          toggleModalPalette={toggleModalPalette}\n          selectedColors={selectedColors}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from './contexts/Provider';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ModalChooseColor_Container__213HF\",\"SliderContainer\":\"ModalChooseColor_SliderContainer__1Tadk\",\"ButtonContainer\":\"ModalChooseColor_ButtonContainer__b3wKt\",\"CancelButton\":\"ModalChooseColor_CancelButton__ZQB7p\",\"OkButton\":\"ModalChooseColor_OkButton__2q4sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ModalPalette_Container__V101Q\",\"List\":\"ModalPalette_List__3qGHD\",\"Text\":\"ModalPalette_Text__2jL_h\",\"Item\":\"ModalPalette_Item__3IYEr\",\"ItemText\":\"ModalPalette_ItemText__NvGaH\",\"TipTriangle\":\"ModalPalette_TipTriangle__JutnV\"};"],"sourceRoot":""}