{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","components/ColorPicker/ColorPicker.js","components/ModalChooseColor/ModalChooseColor.js","components/ModalPalette/ModalPalette.js","components/App.js","reportWebVitals.js","index.js","components/ModalChooseColor/ModalChooseColor.module.css","components/ModalPalette/ModalPalette.module.css"],"names":["module","exports","ColorPicker","color","toggleModalChoose","toggleModalPalette","useEffect","s","backgroundColor","width","height","marginTop","marginLeft","marginRight","className","style","Container","Menu","Number","Square","onClick","event","preventDefault","Arrow","Icon","ModalChooseColor","updateColor","addSelectedColor","useState","h","l","a","redColor","setRedColor","hexRedColor","setHexRedColor","greenColor","setGreenColor","hexGreenColor","setHexGreenColor","blueColor","setBlueColor","hexBlueColor","setHexBlueColor","chosenColor","setChosenColor","updatedColorToString","newColor","mixChosenColors","r","slice","g","b","SliderContainer","handleChangeColor","updatedColor","convert","hsl","hex","console","log","localStorage","setItem","ButtonContainer","type","CancelButton","OkButton","ModalPalette","selectedColors","Text","List","map","Item","ItemText","border","uuidv4","App","setColor","setSelectedColors","showModalChoose","setShowModalChoose","showModalPalette","setShowModalPalette","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf73d811.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ColorPicker_Container__K1kK3\",\"Menu\":\"ColorPicker_Menu__3GfxU\",\"Number\":\"ColorPicker_Number__2TOem\",\"Square\":\"ColorPicker_Square__3YcvT\",\"Arrow\":\"ColorPicker_Arrow__2tS5M\",\"Icon\":\"ColorPicker_Icon__3Ax4b\"};","import { useState, useEffect } from 'react';\r\nimport style from './ColorPicker.module.css';\r\nimport { ChevronDown } from 'react-feather';\r\n\r\nfunction ColorPicker({ color, toggleModalChoose, toggleModalPalette }) {\r\n  useEffect(() => {}, []);\r\n\r\n  const s = {\r\n    backgroundColor: color,\r\n    width: '15px',\r\n    height: '15px',\r\n    marginTop: '7px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  };\r\n  const handleSquareClick = event => {\r\n    //при клике на кнопку все значения сбрасываются\r\n    event.preventDefault();\r\n    toggleModalChoose();\r\n  };\r\n\r\n  const handleArrowClick = event => {\r\n    event.preventDefault();\r\n    toggleModalPalette();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Menu}>\r\n        <div className={style.Number}>{color}</div>\r\n        <div className={style.Square} onClick={handleSquareClick}>\r\n          <div style={s}></div>\r\n        </div>\r\n        <div className={style.Arrow} onClick={handleArrowClick}>\r\n          <ChevronDown className={style.Icon} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './ModalChooseColor.module.css';\r\nimport { LightnessSlider } from 'react-slider-color-picker';\r\nimport convert from 'color-convert';\r\n\r\nfunction ModalChooseColor({\r\n  updateColor,\r\n  toggleModalChoose,\r\n  addSelectedColor,\r\n}) {\r\n  const [redColor, setRedColor] = useState({ h: 0, s: 100, l: 50, a: 1 });\r\n  const [hexRedColor, setHexRedColor] = useState('#ff0000');\r\n  const [greenColor, setGreenColor] = useState({ h: 120, s: 100, l: 50, a: 1 });\r\n  const [hexGreenColor, setHexGreenColor] = useState('#00ff00');\r\n  const [blueColor, setBlueColor] = useState({ h: 240, s: 100, l: 50, a: 1 });\r\n  const [hexBlueColor, setHexBlueColor] = useState('#0000ff');\r\n  const [chosenColor, setChosenColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    updateColor(chosenColor);\r\n  }, [chosenColor]);\r\n\r\n  function updatedColorToString(newColor) {\r\n    return [newColor.h, newColor.s, newColor.l];\r\n  }\r\n  //можно было сделать обычные переменные для хекс цветов\r\n\r\n  function mixChosenColors() {\r\n    let r = hexRedColor.slice(0, 2);\r\n    let g = hexGreenColor.slice(2, 4);\r\n    let b = hexBlueColor.slice(4);\r\n    return setChosenColor(`#${r}${g}${b}`);\r\n  }\r\n\r\n  const handleChangeRedColor = newColor => {\r\n    setRedColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexRedColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n    console.log('localStorageRed', localStorage.setItem('red', newColor));\r\n  };\r\n  const handleChangeGreenColor = newColor => {\r\n    setGreenColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexGreenColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n  };\r\n  const handleChangeBlueColor = newColor => {\r\n    setBlueColor(newColor);\r\n    let updatedColor = updatedColorToString(newColor);\r\n    setHexBlueColor(convert.hsl.hex(updatedColor));\r\n    mixChosenColors();\r\n  };\r\n\r\n  const handleCancelBtnClick = event => {\r\n    event.preventDefault();\r\n    toggleModalChoose();\r\n  };\r\n  const handleOKClick = event => {\r\n    event.preventDefault();\r\n    console.log('chosenColor', chosenColor);\r\n    addSelectedColor(chosenColor);\r\n    toggleModalChoose();\r\n  };\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.SliderContainer}>\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeRedColor}\r\n          color={redColor}\r\n        />\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeGreenColor}\r\n          color={greenColor}\r\n        />\r\n        <LightnessSlider\r\n          handleChangeColor={handleChangeBlueColor}\r\n          color={blueColor}\r\n        />\r\n      </div>\r\n      <div className={style.ButtonContainer}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCancelBtnClick}\r\n          className={style.CancelButton}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleOKClick}\r\n          className={style.OkButton}\r\n        >\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChooseColor;\r\n","import { useEffect } from 'react';\r\nimport style from './ModalPalette.module.css';\r\nimport { X } from 'react-feather';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ModalPalette({ toggleModalPalette, selectedColors }) {\r\n  useEffect(() => {\r\n    console.log('selectedColors in Palette', selectedColors);\r\n  }, []);\r\n  // const deleteColor = key => {\r\n  //   console.log(key);\r\n  // };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <h2 className={style.Text}>Your color collection</h2>\r\n      {selectedColors && (\r\n        <ul className={style.List}>\r\n          {selectedColors.map(color => (\r\n            <li key={uuidv4()} className={style.Item}>\r\n              <h2 className={style.ItemText}>{color}</h2>\r\n              <div\r\n                style={{\r\n                  width: '15px',\r\n                  height: '15px',\r\n                  backgroundColor: color,\r\n                  border: '1px solid #b6b6b4',\r\n                }}\r\n              ></div>\r\n              {/* <X onClick={deleteColor(key)} /> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPalette;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ColorPicker from './ColorPicker';\nimport ModalChooseColor from './ModalChooseColor';\nimport ModalPalette from './ModalPalette';\n\nfunction App() {\n  const [color, setColor] = useState('#ff0000');\n  const [selectedColors, setSelectedColors] = useState([]);\n  const [showModalChoose, setShowModalChoose] = useState(false);\n  const [showModalPalette, setShowModalPalette] = useState(false);\n  useEffect(() => {}, [color]);\n  function updateColor(value) {\n    setColor(value);\n    console.log('this is updateColorFunction', color);\n  }\n\n  function toggleModalChoose() {\n    if (showModalPalette) {\n      setShowModalPalette(false);\n    }\n    setShowModalChoose(!showModalChoose);\n  }\n\n  function toggleModalPalette() {\n    if (showModalChoose) {\n      setShowModalChoose(false);\n    }\n    setShowModalPalette(!showModalPalette);\n  }\n\n  function addSelectedColor(chosenColor) {\n    if (chosenColor) {\n      setSelectedColors([...selectedColors, chosenColor]);\n      console.log('selectedColorsArray', selectedColors);\n    } else {\n      return;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <ColorPicker\n        color={color}\n        toggleModalChoose={toggleModalChoose}\n        toggleModalPalette={toggleModalPalette}\n      />\n      {showModalChoose && (\n        <ModalChooseColor\n          updateColor={updateColor}\n          toggleModalChoose={toggleModalChoose}\n          addSelectedColor={addSelectedColor}\n        />\n      )}\n      {showModalPalette && (\n        <ModalPalette\n          toggleModalPalette={toggleModalPalette}\n          selectedColors={selectedColors}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ModalChooseColor_Container__213HF\",\"SliderContainer\":\"ModalChooseColor_SliderContainer__1Tadk\",\"ButtonContainer\":\"ModalChooseColor_ButtonContainer__b3wKt\",\"CancelButton\":\"ModalChooseColor_CancelButton__ZQB7p\",\"OkButton\":\"ModalChooseColor_OkButton__2q4sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ModalPalette_Container__V101Q\",\"List\":\"ModalPalette_List__3qGHD\",\"Text\":\"ModalPalette_Text__2jL_h\",\"Item\":\"ModalPalette_Item__3IYEr\",\"ItemText\":\"ModalPalette_ItemText__NvGaH\",\"TipTriangle\":\"ModalPalette_TipTriangle__JutnV\"};"],"sourceRoot":""}